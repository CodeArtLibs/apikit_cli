name: Build APIKit CLI Binaries

on:
  push:
    tags:
      - 'v*.*' # triggers on tags like v1.2
  workflow_dispatch: # manual trigger

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set CLI version
        run: echo "APIKIT_CLI_VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Nuitka
        run: |
          python -m pip install -U pip wheel nuitka

      - name: Configure filename
        # Force to use bash to avoid error on Windows
        shell: bash
        # GITHUB_ENV to persist between steps: ${{ env.VAR }}
        run: |
          CLI_FILENAME="dist/apikit-${{ runner.os }}-${{ runner.arch }}-$APIKIT_CLI_VERSION"
          CLI_FILENAME=$(echo "$CLI_FILENAME" | tr '[:upper:]' '[:lower:]')
          echo "CLI_FILENAME=$CLI_FILENAME" >> $GITHUB_ENV
          echo "$CLI_FILENAME"

      - name: Build binary
        shell: bash
        run: |
          mkdir -p dist
          echo "Creating ${{ env.CLI_FILENAME }}"
          python -m nuitka --python-flag=no_asserts --python-flag=no_docstrings --python-flag=unbuffered --show-progress --assume-yes-for-downloads -o ${{ env.CLI_FILENAME }} apikit_cli/apikit.py

      - name: SHA256 Linux/macOS
        if: runner.os != 'Windows'
        shell: bash
        run: shasum -a 256 "${{ env.CLI_FILENAME }}" > "${{ env.CLI_FILENAME }}.hash"

      - name: SHA256 Windows
        if: runner.os == 'Windows'
        shell: pwsh
        # Debug
        # Get-ChildItem -Recurse
        # Write-Host "Looking for $env:CLI_FILENAME"
        # if (-Not (Test-Path $env:CLI_FILENAME)) { throw "File not found" }
        run: |
          $hash = Get-FileHash -Algorithm SHA256 "$env:CLI_FILENAME.exe"
          $hash.Hash | Out-File "$env:CLI_FILENAME.hash" -Encoding ascii

      # https://github.com/CodeArtLibs/apikit_cli/releases/
      - name: Upload release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.APIKIT_CLI_VERSION }}
          files: dist/*
        env:
          # Automatically defined by GH
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/CodeArtLibs/apikit_cli/releases/latest
      - name: Update latest release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          files: dist/*
        env:
          # Automatically defined by GH
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
