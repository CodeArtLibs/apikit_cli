name: Build APIKit CLI Binaries

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    env:
        APIKIT_CLI_VERSION: nightly

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Nuitka
        run: |
          python -m pip install -U pip wheel nuitka

      - name: Configure filename
        # Force to use bash to avoid error on Windows
        shell: bash
        # GITHUB_ENV to persist between steps: ${{ env.VAR }}
        run: |
          CLI_FILENAME="dist/apikit-${{ runner.os }}-${{ runner.arch }}-$APIKIT_CLI_VERSION"
          CLI_FILENAME=$(echo "$CLI_FILENAME" | tr '[:upper:]' '[:lower:]')
          echo "CLI_FILENAME=$CLI_FILENAME" >> $GITHUB_ENV
          echo "$CLI_FILENAME"

      - name: Build binary
        shell: bash
        run: |
          mkdir -p dist
          echo "Creating ${{ env.CLI_FILENAME }}"
          python -m nuitka --python-flag=no_asserts --python-flag=no_docstrings --python-flag=unbuffered --show-progress --assume-yes-for-downloads -o ${{ env.CLI_FILENAME }} apikit_cli/apikit.py

      - name: Upload to nightly release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly
          prerelease: true
          # overwrite: true
          files: dist/*
        env:
          # Automatically defined by GH
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: binary-${{ matrix.os }}
      #     # Linux, MacOS, Windows
      #     path: |
      #       apikit-$APIKIT_CLI_VERSION
      #       apikit-$APIKIT_CLI_VERSION.bin
      #       apikit-$APIKIT_CLI_VERSION.exe
      #     if-no-files-found: ignore
